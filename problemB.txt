#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>   //PBDS
#include <ext/pb_ds/tree_policy.hpp>       //PBDS
#define int long long int
#define vi vector<int>
#define vii vector<pair<int,int>>
#define pi pair<int,int>
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define mi   map<int,int>
#define PI   3.141592653589
#define all(a)  (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define f(n) for(int i=0;i<n;i++)
#define rf(n) for(int i=n-1;i>=0;i--)
#define check(x)   cerr<<#x<<" : "<<x<<endl;
#define ordered_set tree<int,null_type,less_equal<int>,rb_tree_tag,tree_order_statistics_node_update>
#define fbo find_by_order                    //return iterator PBDS
#define ook order_of_key                     //return number :)) PBDS
#define baar exit(0)
#define mod 1000000007
using namespace __gnu_pbds;
using namespace std;
signed main()
{
	fast
	int t;
	cin>>t;
	for(int z=1;z<=t;z++)
	{
		string s;
		cin>>s;
		string s1="";
		int first=s[0]-'0';
		for(int i=0;i<first;i++) s1+="(";
		for(int i=0;i<s.length()-1;i++)
		{
			s1+=s[i];
			int dif=(s[i]-s[i+1]);
			if(dif>0)
			{
				while(dif>0)
				{
					s1+=")";
					dif--;
				}
			}
			else if(dif<0)
			{
				while(dif<0)
				{
					s1+="(";
					dif++;
				}
			}
		}
		s1+=s[s.length()-1];
		int second=s[s.length()-1]-'0';
		for(int i=0;i<second;i++) s1+=")";
		cout<<"Case #"<<z<<": "<<s1<<endl;
	}
	return 0;
}
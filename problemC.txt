#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>   //PBDS
#include <ext/pb_ds/tree_policy.hpp>       //PBDS
#define int long long int
#define vi vector<int>
#define vii vector<pair<int,int>>
#define pi pair<int,int>
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define mi   map<int,int>
#define PI   3.141592653589
#define all(a)  (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define f(n) for(int i=0;i<n;i++)
#define rf(n) for(int i=n-1;i>=0;i--)
#define check(x)   cerr<<#x<<" : "<<x<<endl;
#define ordered_set tree<int,null_type,less_equal<int>,rb_tree_tag,tree_order_statistics_node_update>
#define fbo find_by_order                    //return iterator PBDS
#define ook order_of_key                     //return number :)) PBDS
#define baar exit(0)
#define mod 1000000007
using namespace __gnu_pbds;
using namespace std;
signed main()
{
	fast
	int t;
	cin>>t;
	for(int z=1;z<=t;z++)
	{
		int n;
		cin>>n;
		map<pi,int>mp;
		vector<pi>v;
		f(n)
		{
			int x,y;
			cin>>x>>y;
			mp[{x,y}]=i;
			v.pb(make_pair(x,y));
		}
		sort(all(v));
		string ans="";
		f(n) ans+="C";
	    ans[mp[{v[0].first,v[0].second}]]='C';
	    int etimec=v[0].second,etimej,flag=0,im=0;
	    for(int i=1;i<n;i++)
	    {
	    	if(v[i].first>=etimec)
	    	{
	    		ans[mp[{v[i].first,v[i].second}]]='C';
	    		etimec=v[i].second;
			}
			else if(v[i].first<etimec && flag==0)
			{
				flag=1;
				etimej=v[i].second;
				ans[mp[{v[i].first,v[i].second}]]='J';
			}
			else if(v[i].first<etimec && v[i].first>=etimej)
			{
				etimej=v[i].second;
				ans[mp[{v[i].first,v[i].second}]]='J';
			}
			else if(v[i].first<etimec && v[i].first<etimej)
			{
				im=1;
				break;
			}
		}
		if(im==1) cout<<"Case #"<<z<<": "<<"IMPOSSIBLE"<<endl;
		else
		cout<<"Case #"<<z<<": "<<ans<<endl;
	}
	return 0;
}